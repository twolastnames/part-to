////////////////////////////////////////////////////////////
//  DO NOT DIRECTLY EDIT THIS FILE!!!
//  This file is generated by the updateapi custom django command.
//  Unless functionality needs to be added, the best way to have
//  changes in here is to modify the openapi definition in
//  endpoints.openapi.yaml
////////////////////////////////////////////////////////////

/* eslint-disable @typescript-eslint/no-unused-vars */
import { Result, Options, useGet } from "./helpers";
import { DateTime } from "../shared/dateTime";
import { Duration } from "../shared/duration";

import {
  parameterMarshalers,
  unmarshalers,
  Four04Reply,
  RunOperationReply,
  RunOperation,
  PartTo,
  TaskDefinition,
  RunState,
  PartToId,
  RunStateId,
  TaskDefinitionId,
} from "./sharedschemas";

/* eslint-enable @typescript-eslint/no-unused-vars */

export type TaskGet200Body = {
  name: string;
  duration: Duration;
  description: string;
  ingredients: Array<string>;
  tools: Array<string>;
  depends?: Array<string>;
  engagement?: number | undefined;
};

type Wire200Body = {
  name: string;
  duration: number;
  description: string;
  ingredients: Array<string>;
  tools: Array<string>;
  depends?: Array<string>;
  engagement?: number | undefined;
};

export type TaskGetArguments = { task: TaskDefinitionId };

interface ExternalMappers {
  [status: string]: (arg: Wire200Body) => TaskGet200Body;

  200: (arg: Wire200Body) => TaskGet200Body;
}

export type TaskGetResult = Result<TaskGet200Body>;

export const useTaskGet: (
  args: TaskGetArguments,
  options?: Options,
) => TaskGetResult = ({ task }, options) =>
  useGet<Wire200Body, TaskGet200Body, ExternalMappers>(
    "/api/task/",
    [
      {
        name: "task",
        value: parameterMarshalers.required["TaskDefinitionId"](task),
      },
    ],
    {
      200: (body: Wire200Body) => ({
        name: unmarshalers.required["string"](body.name),
        duration: unmarshalers.required["duration"](body.duration),
        description: unmarshalers.required["string"](body.description),
        ingredients: body.ingredients.map((value) =>
          unmarshalers.required["string"](value),
        ),
        tools: body.tools.map((value) =>
          unmarshalers.required["string"](value),
        ),
        depends: body.depends?.map((value) =>
          unmarshalers.required["string"](value),
        ),
        engagement: unmarshalers.unrequired["number"](body.engagement),
      }),
    },
    options,
  );
