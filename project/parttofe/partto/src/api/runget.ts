////////////////////////////////////////////////////////////
//  DO NOT DIRECTLY EDIT THIS FILE!!!
//  This file is generated by the updateapi custom django command.
//  Unless functionality needs to be added, the best way to have
//  changes in here is to modify the openapi definition in
//  endpoints.openapi.yaml
////////////////////////////////////////////////////////////

/* eslint-disable @typescript-eslint/no-unused-vars */
import { Result, DateTime, Duration, useGet } from "./helpers";

import {
  parameterMarshalers,
  unmarshalers,
  Four04Reply,
  RunOperationReply,
  RunOperation,
  PartTo,
  TaskDefinition,
  RunState,
  PartToId,
  RunStateId,
  TaskDefinitionId,
} from "./sharedschemas";

/* eslint-enable @typescript-eslint/no-unused-vars */

export type RunGet200Body = {
  runState: RunStateId;
  report?: DateTime | undefined;
  complete?: DateTime | undefined;
  staged: Array<TaskDefinitionId>;
  started: Array<TaskDefinitionId>;
  created: Array<TaskDefinitionId>;
  voided: Array<TaskDefinitionId>;
  completed: Array<TaskDefinitionId>;
};

type Wire200Body = {
  runState: RunStateId;
  report?: string | undefined;
  complete?: string | undefined;
  staged: Array<TaskDefinitionId>;
  started: Array<TaskDefinitionId>;
  created: Array<TaskDefinitionId>;
  voided: Array<TaskDefinitionId>;
  completed: Array<TaskDefinitionId>;
};

export type RunGetArguments = { runState: RunStateId };

interface ExternalMappers {
  [status: string]: (arg: Wire200Body) => RunGet200Body;

  200: (arg: Wire200Body) => RunGet200Body;
}

export type RunGetResult = Result<RunGet200Body>;

export const useRunGet: (args: RunGetArguments) => RunGetResult = ({
  runState,
}) =>
  useGet<Wire200Body, RunGet200Body, ExternalMappers>(
    "/api/run/",
    [
      {
        name: "runState",
        value: parameterMarshalers.required["RunStateId"](runState),
      },
    ],
    {
      200: (body: Wire200Body) => ({
        runState: unmarshalers.required["RunStateId"](body.runState),
        report: unmarshalers.unrequired["date-time"](body.report),
        complete: unmarshalers.unrequired["date-time"](body.complete),
        staged: body.staged.map((value) =>
          unmarshalers.required["TaskDefinitionId"](value),
        ),
        started: body.started.map((value) =>
          unmarshalers.required["TaskDefinitionId"](value),
        ),
        created: body.created.map((value) =>
          unmarshalers.required["TaskDefinitionId"](value),
        ),
        voided: body.voided.map((value) =>
          unmarshalers.required["TaskDefinitionId"](value),
        ),
        completed: body.completed.map((value) =>
          unmarshalers.required["TaskDefinitionId"](value),
        ),
      }),
    },
  );
