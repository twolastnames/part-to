openapi: "3.0.0"
servers:
- url: http://testserver/api
info:
  version: 1.0.0
  title: Part To
  license:
    name: MIT
paths:
  /api/parttos/:
    get:
      summary: list all part tos
      operationId: parttos:get
      responses:
        '404':
          description: a frontend bug
          content:
            '*':
              schema:
                $ref: "#/components/schemas/Four04Reply"
        '500':
          description: a backend bug
          content:
            '*':
              schema:
                type: string
        '400':
          description: a frontend bug
          content:
            '*':
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Expected response to a valid request
          content:
            '*':
              schema:
                type: object
                properties:
                  partTos:
                    type: array
                    items:
                      type: string
                      format: PartToId
  /api/partto/:
    get:
      summary: Disclose a part to definition
      operationId: partto:get
      tags:
      - partto 
      parameters:
      - name: partTo
        in: query
        required: true
        schema:
          type: string
          format: PartToId
      responses:
        '404':
          description: a frontend bug
          content:
            '*':
              schema:
                $ref: "#/components/schemas/Four04Reply"
        '500':
          description: a backend bug
          content:
            '*':
              schema:
                type: string
        '400':
          description: a frontend bug
          content:
            '*':
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Expected response to a valid request
          content:
            '*':
              schema:
                $ref: "#/components/schemas/PartTo"
    post:
      summary: Define a part to
      operationId: partto:post
      tags:
      - partto 
      requestBody:
        description: describe part to
        content:
          '*':
            schema:
              required:
              - part_to
              - tasks
              type: object
              properties:
                part_to:
                  type: object
                  required:
                  - name
                  - depends
                  properties:
                    name:
                      type: string
                    depends:
                      type: array
                      items:
                        type: string
                tasks:
                  type: array
                  items:
                    $ref: "#/components/schemas/TaskDefinition"
      responses:
        '404':
          description: a frontend bug
          content:
            '*':
              schema:
                $ref: "#/components/schemas/Four04Reply"
        '500':
          description: a backend bug
          content:
            '*':
              schema:
                type: string
        '400':
          description: a frontend bug
          content:
            '*':
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Expected response to a valid request
          content:
            '*':
              schema:
                type: object
                required:
                - partTo
                - message
                properties:
                  partTo:
                    type: string
                    format: PartToId
                  message:
                    type: string
  /api/task/:
    get:
      summary: Disclose a part to task
      operationId: task:get
      tags:
      - partto 
      parameters:
      - name: task
        in: query
        required: true
        schema:
          type: string
          format: TaskDefinitionId
      responses:
        '404':
          description: a frontend bug
          content:
            '*':
              schema:
                $ref: "#/components/schemas/Four04Reply"
        '500':
          description: a backend bug
          content:
            '*':
              schema:
                type: string
        '400':
          description: a frontend bug
          content:
            '*':
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Expected response to a valid request
          content:
            '*':
              schema:
                $ref: "#/components/schemas/TaskDefinition"
  /api/run/:
    get:
      summary: read a run state
      operationId: run:get
      tags:
      - runState
      parameters:
      - name: runState
        in: query
        required: true
        schema:
          type: string
          format: RunStateId
      responses:
        '404':
          description: a frontend bug
          content:
            '*':
              schema:
                $ref: "#/components/schemas/Four04Reply"
        '500':
          description: a backend bug
          content:
            '*':
              schema:
                type: string
        '400':
          description: a frontend bug
          content:
            '*':
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Expected response to a valid request
          content:
            '*':
              schema:
                $ref: "#/components/schemas/RunState"

  /api/run/start:
    post:
      summary: start a set of definitions
      operationId: runstart:post
      tags:
      - run
      requestBody:
        description: List of unique part to titles to run
        required: true
        content:
          '*':
            schema:
              type: object
              properties:
                runState:
                  type: string
                  format: RunStateId
      responses:
        '404':
          description: a frontend bug
          content:
            '*':
              schema:
                $ref: "#/components/schemas/Four04Reply"
        '500':
          description: a backend bug
          content:
            '*':
              schema:
                type: string
        '400':
          description: a frontend bug
          content:
            '*':
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Expected response to a valid request
          content:
            '*':
              schema:
                $ref: "#/components/schemas/RunOperationReply"

  /api/run/report:
    post:
      summary: start a set of definitions
      operationId: runreport:post
      tags:
      - run
      requestBody:
        description: List of unique part to titles to run
        required: true
        content:
          '*':
            schema:
              type: object
              properties:
                runState:
                  type: string
                  format: RunStateId
      responses:
        '404':
          description: a frontend bug
          content:
            '*':
              schema:
                $ref: "#/components/schemas/Four04Reply"
        '500':
          description: a backend bug
          content:
            '*':
              schema:
                type: string
        '400':
          description: a frontend bug
          content:
            '*':
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Expected response to a valid request
          content:
            '*':
              schema:
                $ref: "#/components/schemas/RunOperationReply"

  /api/run/complete:
    post:
      summary: complete a set of definitions
      operationId: runcomplete:post
      tags:
      - run
      requestBody:
        description: List of unique part to titles to run
        required: true
        content:
          '*':
            schema:
                $ref: "#/components/schemas/RunOperation"
      responses:
        '404':
          description: a frontend bug
          content:
            '*':
              schema:
                $ref: "#/components/schemas/Four04Reply"
        '500':
          description: a backend bug
          content:
            '*':
              schema:
                type: string
        '400':
          description: a frontend bug
          content:
            '*':
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Expected response to a valid request
          content:
            '*':
              schema:
                $ref: "#/components/schemas/RunOperationReply"

  /api/run/void:
    post:
      summary: void a set of definitions
      operationId: runvoid:post
      tags:
      - run
      requestBody:
        description: List of unique part to titles to run
        required: true
        content:
          '*':
            schema:
                $ref: "#/components/schemas/RunOperation"
      responses:
        '404':
          description: a frontend bug
          content:
            '*':
              schema:
                $ref: "#/components/schemas/Four04Reply"
        '500':
          description: a backend bug
          content:
            '*':
              schema:
                type: string
        '400':
          description: a frontend bug
          content:
            '*':
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Expected response to a valid request
          content:
            '*':
              schema:
                $ref: "#/components/schemas/RunOperationReply"

  /api/run/stage:
    post:
      summary: stage a set of definitions
      operationId: runstage:post
      tags:
      - run
      requestBody:
        description: List of unique part to titles to run
        required: true
        content:
          '*':
            schema:
              required:
              - partTos
              type: object
              properties:
                runState:
                  type: string
                  format: RunStateId
                partTos:
                  type: array
                  items:
                    type: string
                    format: PartToId
      responses:
        '404':
          description: a frontend bug
          content:
            '*':
              schema:
                $ref: "#/components/schemas/Four04Reply"
        '500':
          description: a backend bug
          content:
            '*':
              schema:
                type: string
        '400':
          description: a frontend bug
          content:
            '*':
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Expected response to a valid request
          content:
            '*':
              schema:
                $ref: "#/components/schemas/RunOperationReply"

components:
  schemas:
    Four04Reply:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
    RunOperationReply:
      type: object
      required:
      - runState
      properties:
        runState:
          type: string
          format: RunStateId
    RunOperation:
      type: object
      required:
        - definitions
      properties:
        runState:
          type: string
          format: RunStateId
        definitions:
          type: array
          items:
            type: string
            format: TaskDefinitionId
          minItems: 1
    PartTo:
      type: object
      required:
      - name
      - tasks
      properties:
        name:
          type: string
        workDuration:
          type: number
          format: duration
        clockDuration:
          type: number
          format: duration
        tasks:
          type: array
          items:
            type: string
            format: TaskDefinitionId
    TaskDefinition:
      required:
      - name
      - duration
      - description
      type: object
      properties:
        name:
          type: string
        duration:
          type: number
          format: duration
        description:
          type: string
        depends:
          type: array
          items:
            type: string
        engagement:
          type: number
    RunState:
      required:
      - runState
      - staged
      - started
      - created
      - voided
      - completed
      type: object
      properties:
        runState:
          type: string
          format: RunStateId
        report:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        activePartTos:
          type: array
          items:
            type: string
            format: PartToId
        staged:
          type: array
          items:
            type: string
            format: TaskDefinitionId
        started:
          type: array
          items:
            type: string
            format: TaskDefinitionId
        created:
          type: array
          items:
            type: string
            format: TaskDefinitionId
        voided:
          type: array
          items:
            type: string
            format: TaskDefinitionId
        completed:
          type: array
          items:
            type: string
            format: TaskDefinitionId
